generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model qna {
  id           Int           @id @default(autoincrement())
  question     String        @default("") @db.VarChar
  answer       String        @default("") @db.VarChar
  position     Int           @default(autoincrement()) @db.SmallInt
  created_at   DateTime      @default(now()) @db.Timestamptz(6)
  status       status?       @default(createPending)
  contentBlock contentBlock?
}

model account {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  username   String   @unique @default("") @db.VarChar
  password   String   @db.VarChar
  role       role     @default(user)
  created_at DateTime @default(now()) @db.Timestamptz(6)
}

model contentBlock {
  id                           Int        @id @default(autoincrement())
  page                         String     @db.VarChar
  position                     Int        @db.SmallInt
  blockType                    blockType  @default(paragraph)
  faqId                        Int?       @unique
  created_at                   DateTime   @default(now()) @db.Timestamptz(6)
  paragraphId                  Int?       @unique
  qna                          qna?       @relation(fields: [faqId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  page_contentBlock_pageTopage page       @relation("contentBlock_pageTopage", fields: [page], references: [id], onDelete: Cascade, onUpdate: NoAction)
  paragraph                    paragraph? @relation(fields: [paragraphId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model page {
  id                                   String         @id @db.VarChar
  header                               String?        @db.VarChar
  created_at                           DateTime       @default(now()) @db.Timestamptz(6)
  contentBlock_contentBlock_pageTopage contentBlock[] @relation("contentBlock_pageTopage")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model paragraph {
  id           Int           @id @default(autoincrement())
  text         String
  created_at   DateTime      @default(now()) @db.Timestamptz(6)
  contentBlock contentBlock?
}

enum status {
  verified
  createPending
  deletePending
  updatePending
}

enum role {
  admin
  user
}

enum blockType {
  faq
  paragraph
}
